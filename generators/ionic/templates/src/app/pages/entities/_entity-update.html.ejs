<%#
 Copyright 2017-2023 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see http://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>
<%_
const keyPrefix = entityTranslationKey + '.';
_%>
<ion-header>
    <ion-toolbar>
        <ion-buttons slot="start">
            <ion-back-button></ion-back-button>
        </ion-buttons>
        <ion-title><%= entityClassHumanized %></ion-title>

        <ion-buttons slot="end">
            <ion-button [disabled]="!isReadyToSave" (click)="save()" color="primary">
              <span *ngIf="platform.is('ios')">{{'DONE_BUTTON' | translate}}</span>
              <ion-icon name="checkmark" *ngIf="!platform.is('ios')"></ion-icon>
            </ion-button>
        </ion-buttons>
    </ion-toolbar>
</ion-header>


<ion-content class="ion-padding">
    <form *ngIf="form" name="form" [formGroup]="form" (ngSubmit)="save()">
        <ion-list>
            <ion-item [hidden]="!form.id">
                <ion-label>ID</ion-label>
                <ion-input type="hidden" id="id" formControlName="id" readonly></ion-input>
            </ion-item>
            <%_ for (idx in fields) {
                const fieldName = fields[idx].fieldName;
                // skip id since it's already rendered above
                if (fieldName === 'id') {
                  continue;
                }
                const fieldNameCapitalized = fields[idx].fieldNameCapitalized;
                const fieldNameHumanized = fields[idx].fieldNameHumanized;
                const fieldType = fields[idx].fieldType;
                const fieldTypeBlobContent = fields[idx].fieldTypeBlobContent;
                let fieldInputType = 'text';
                let ngModelOption = '';
                const translationKey = keyPrefix + fieldName;
                if (['Integer', 'Long', 'Float', 'Double', 'BigDecimal'].includes(fieldType)) {
                    fieldInputType = 'number';
                } else if (fieldType === 'LocalDate') {
                    fieldInputType = 'date';
                } else if (['Instant', 'ZonedDateTime'].includes(fieldType)) {
                    fieldInputType = 'datetime-local';
                } else if (fieldType === 'Boolean') {
                    fieldInputType = 'checkbox';
                } else if (['byte[]', 'ByteBuffer'].includes(fieldType) && fieldTypeBlobContent !== 'text') {
                    fieldInputType = 'hidden';
                }
            _%>
            <ion-item>
                <%_ if (fields[idx].fieldIsEnum) { _%>
                <ion-label><%= fieldNameHumanized %></ion-label>
                <ion-select formControlName="<%= fieldName %>" id="field_<%= fieldName %>" <% if (fields[idx].fieldValidate === true && fields[idx].fieldValidateRules.indexOf('required') !== -1) { %> required<% } %>>
                <%_ for (value of fields[idx].enumValues) { _%>
                        <ion-select-option value="<%= value.name %>"><% if (enableTranslation) { %>{{'<%=fieldType%>.<%=value.name%>' | translate}}<% } else { %><%=value.value%><% } %></ion-select-option>
                    <%_ } _%>
                </ion-select>
                <%_ } else if (['byte[]', 'ByteBuffer'].includes(fieldType) && fieldTypeBlobContent !== 'text') { _%>
                <div>
                    <%_ if (fieldTypeBlobContent === 'image') { _%>
                    <img [src]="'data:' + <%=entityInstance %>.<%=fieldName%>ContentType + ';base64,' + <%=entityInstance %>.<%=fieldName%>" style="max-height: 100px;" *ngIf="<%= entityInstance %>?.<%= fieldName %>" alt="<%=entityInstance %> image"/>
                    <%_ } _%>
                    <div *ngIf="<%= entityInstance %>.<%= fieldName %>">
                        <p>{{<%= entityInstance %>.<%= fieldName %>ContentType}}, {{byteSize(<%= entityInstance %>.<%= fieldName %>)}}</p>
                        <%_ if (fieldTypeBlobContent === 'image') { _%>
                        <ion-button color="danger" (click)="clearInputImage('<%= fieldName %>', '<%= fieldName %>ContentType', 'fileImage')">
                            <ion-icon name="trash" slot="icon-only"></ion-icon>
                        </ion-button>
                        <%_ } else { _%>
                        <ion-button color="danger" (click)="<%= entityInstance %>.<%= fieldName %>=null;<%= entityInstance %>.<%= fieldName %>ContentType=null;form.patchValue({'<%= fieldName %>': ''});form.patchValue({'<%= fieldName %>ContentType': ''})">
                            <ion-icon name="trash" slot="icon-only"></ion-icon>
                        </ion-button>
                        <%_ } _%>
                    </div>
                    <%_ if (fieldTypeBlobContent === 'image') { _%>
                    <input *ngIf="!useCameraCapacitor" type="file" data-cy="<%= fieldName %>" #fileInput style="display: none"
                           (change)="setFileData($event, '<%= fieldName %>', true)" accept="image/*"/>
                    <ion-button *ngIf="!<%= entityInstance %>?.<%= fieldName %>" (click)="getPicture('<%= fieldName %>')" data-cy="<%= fieldName %>-take-photo">
                        <ion-icon name="add-circle" slot="start"></ion-icon>
                        {{ 'ITEM_CREATE_CHOOSE_IMAGE' | translate }}
                    </ion-button>
                    <%_ } else { _%>
                    <input type="file" data-cy="<%= fieldName %>" (change)="setFileData($event, '<%= fieldName %>', false)"/>
                    <%_ } _%>
                </div>
                <%_ } else if (['LocalDate', 'Instant', 'ZonedDateTime'].includes(fieldType)) { _%>
                <ion-label><%= fieldNameHumanized %></ion-label>
                <ion-datetime displayFormat="MM/DD/YYYY<%= fieldType !== 'LocalDate' ? ' HH:mm' : ''%>" formControlName="<%= fieldName %>" id="field_<%= fieldName %>"></ion-datetime>
                <%_ } else if (fieldType === 'Boolean') { _%>
                <ion-label><%= fieldNameHumanized %></ion-label>
                <ion-checkbox formControlName="<%= fieldName %>"></ion-checkbox>
                <%_ } else if (fieldTypeBlobContent === 'text') { _%>
                <ion-textarea placeholder="<%= fieldNameHumanized %>" formControlName="<%= fieldName %>" id="field_<%= fieldName %>"></ion-textarea>
                <%_ } else { _%>
                <ion-label position="floating"><%= fieldNameHumanized %></ion-label>
                <ion-input type="<%= fieldInputType %>" name="<%= fieldName %>" formControlName="<%= fieldName %>"></ion-input>
                <%_ } _%>
            </ion-item>
            <%_ } _%>
            <%_ for (idx in relationships) {
            const relationshipType = relationships[idx].relationshipType;
            const ownerSide = relationships[idx].ownerSide;
            const otherEntityName = relationships[idx].otherEntityName;
            const otherEntityNamePlural = relationships[idx].otherEntityNamePlural;
            const otherEntityNameCapitalized = relationships[idx].otherEntityNameCapitalized;
            const relationshipName = relationships[idx].relationshipName;
            const relationshipNameHumanized = relationships[idx].relationshipNameHumanized;
            const relationshipFieldName = relationships[idx].relationshipFieldName;
            const relationshipFieldNamePlural = relationships[idx].relationshipFieldNamePlural;
            const otherEntityField = relationships[idx].otherEntityField;
            const relationshipRequired = relationships[idx].relationshipRequired; _%>
            <%_ if (relationshipType === 'many-to-one' || (relationshipType === 'one-to-one' && ownerSide === true && otherEntityName === 'user')) { _%>
            <ion-item>
                <ion-label><%= relationshipNameHumanized %></ion-label>
                <%_ if (dto === 'no') { _%>
                <ion-select id="field_<%= relationshipName %>" formControlName="<%= relationshipName %>" [compareWith]="compare<%=otherEntityNameCapitalized %>"<% if (relationshipRequired) { %> required<% } %>>
                <%_ if (!relationshipRequired) { _%>
                    <ion-select-option [value]="null"></ion-select-option>
                <%_ } else { _%>
                    <ion-select-option *ngIf="!form.value.<%= relationshipName %>" [value]="null" selected></ion-select-option>
                <%_ } _%>
                    <ion-select-option [value]="<%=otherEntityName %>Option" *ngFor="let <%=otherEntityName %>Option of <%=otherEntityNamePlural%>; trackBy: track<%=otherEntityNameCapitalized %>ById">{{<%=otherEntityName %>Option.<%=otherEntityField %>}}</ion-select-option>
                </ion-select>
                <%_ } else { _%>
                <ion-select id="field_<%= relationshipName %>" formControlName="<%= relationshipName %>Id" [compareWith]="compare<%=otherEntityNameCapitalized %>"<% if (relationshipRequired) { %> required<% } %>>
                <%_ if (!relationshipRequired) { _%>
                    <ion-select-option [value]="null"></ion-select-option>
                <%_ } else { _%>
                    <ion-select-option *ngIf="!form.value.<%= relationshipName %>Id" [value]="null" selected></ion-select-option>
                <%_ } _%>
                    <ion-select-option [value]="<%=otherEntityName %>Option.id" *ngFor="let <%=otherEntityName %>Option of <%=otherEntityNamePlural%>; trackBy: track<%=otherEntityNameCapitalized %>ById">{{<%=otherEntityName %>Option.<%=otherEntityField %>}}</ion-select-option>
                </ion-select>
                <%_ } _%>
            </ion-item>
            <%_ } else if (relationshipType === 'one-to-one' && ownerSide === true) { _%>
            <ion-item>
                <ion-label><%= relationshipNameHumanized %></ion-label>
                <%_ if (dto === 'no') { _%>
                <ion-select id="field_<%= relationshipName %>" formControlName="<%= relationshipName %>" [compareWith]="compare<%=otherEntityNameCapitalized %>"<% if (relationshipRequired) { %> required<% } %>>
                <%_ if (!relationshipRequired) { _%>
                    <ion-select-option [value]="null"></ion-select-option>
                <%_ } else { _%>
                    <ion-select-option *ngIf="!form.value.<%= relationshipName %>" [value]="null" selected></ion-select-option>
                <%_ } _%>
                    <ion-select-option [value]="<%=otherEntityName %>Option.id === <%= entityInstance %>.<%=relationshipFieldName %>?.id ? <%= entityInstance %>.<%=relationshipFieldName %> : <%=otherEntityName %>Option" *ngFor="let <%=otherEntityName %>Option of <%=relationshipFieldNamePlural.toLowerCase() %>; trackBy: track<%=otherEntityNameCapitalized %>ById">{{<%=otherEntityName %>Option.<%=otherEntityField %>}}</ion-select-option>
                </ion-select>
                <%_ } else { _%>
                <ion-select id="field_<%= relationshipName %>" formControlName="<%= relationshipName %>Id" [compareWith]="compare<%=otherEntityNameCapitalized %>"<% if (relationshipRequired) { %> required<% } %>>
                <%_ if (!relationshipRequired) { _%>
                    <ion-select-option [value]="null"></ion-select-option>
                <%_ } else { _%>
                    <ion-select-option *ngIf="!form.value.<%= relationshipName %>Id" [value]="null" selected></ion-select-option>
                <%_ } _%>
                    <ion-select-option [value]="<%=otherEntityName %>Option.id" *ngFor="let <%=otherEntityName %>Option of <%=relationshipFieldNamePlural.toLowerCase() %>; trackBy: track<%=otherEntityNameCapitalized %>ById">{{<%=otherEntityName %>Option.<%=otherEntityField %>}}</ion-select-option>
                </ion-select>
                <%_ } _%>
            </ion-item>
            <%_ } else if (relationshipType === 'many-to-many' && relationships[idx].ownerSide === true) { _%>
            <ion-item>
                <ion-label><%= relationshipNameHumanized %></ion-label>
                <ion-select id="field_<%= relationshipName %>" multiple="true" formControlName="<%= relationshipFieldNamePlural %>" [compareWith]="compare<%=otherEntityNameCapitalized %>"<% if (relationshipRequired) { %> required<% } %>>
                    <ion-select-option [value]="<%=otherEntityName %>Option" *ngFor="let <%=otherEntityName %>Option of <%=otherEntityNamePlural.toLowerCase() %>; trackBy: track<%=otherEntityNameCapitalized %>ById">{{<%=otherEntityName %>Option.<%=otherEntityField %>}}</ion-select-option>
                </ion-select>
            </ion-item>
            <%_ } _%>
            <%_ if (relationships[idx].relationshipValidate === true) { _%>
            <%_ const controlName = relationshipName + (dto === 'no') ? '' : 'Id' _%>
            <div [hidden]="!(form.controls.<%= controlName %>?.dirty && form.controls.<%= controlName %>?.invalid)">
                <%_ if (relationshipRequired) { _%>
                <small [hidden]="!form.controls.<%= controlName %>?.errors?.required">
                    This field is required.
                </small>
                <%_ } _%>
            </div>
            <%_ } _%>
            <%_ } _%>
        </ion-list>
    </form>
</ion-content>
